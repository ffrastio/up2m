{"remainingRequest":"C:\\Users\\FFrastio\\Documents\\GitHub\\up2m\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\FFrastio\\Documents\\GitHub\\up2m\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\FFrastio\\Documents\\GitHub\\up2m\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\FFrastio\\Documents\\GitHub\\up2m\\frontend\\src\\components\\layouts\\Footer.vue?vue&type=template&id=198874de&","dependencies":[{"path":"C:\\Users\\FFrastio\\Documents\\GitHub\\up2m\\frontend\\src\\components\\layouts\\Footer.vue","mtime":1619715593854},{"path":"C:\\Users\\FFrastio\\Documents\\GitHub\\up2m\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\FFrastio\\Documents\\GitHub\\up2m\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\FFrastio\\Documents\\GitHub\\up2m\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\FFrastio\\Documents\\GitHub\\up2m\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiYm9yZGVyLXQiIH0sIFsKICAgIF9jKCJmb290ZXIiLCBbCiAgICAgIF92bS5fbSgwKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJib3JkZXItdCBtYi00IiB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiZGl2IiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgImNvbnRhaW5lciBibG9jayBtZDpyZWxhdGl2ZSBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgcHktNCBteC1hdXRvIgogICAgICAgICAgfSwKICAgICAgICAgIFsKICAgICAgICAgICAgX3ZtLl9tKDEpLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm1kOmFic29sdXRlIG1kOnB4LTM2IG1kOnRvcC0wIG10LTMiIH0sIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInB4LTQgZmxleCBpdGVtcy1jZW50ZXIgbXQtNCBtZDptdC0wIiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiZm9udC1hd2Vzb21lLWljb24iLCB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ0ZXh0LXByaW1hcnkiLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGljb246ICJtYXAtbWFya2VyLWFsdCIgfQogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInAiLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LXNtIG1sLTQgdGV4dC1sZWZ0IG1kOnRleHQtbGciIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAiIEpsLiBQcm9mLiBEUi4gRy5BLiBTaXdhYmVzc3ksIEthbXB1cyBVbml2ZXJzaXRhcyBJbmRvbmVzaWEgRGVwb2sgMTY0MjUgIgogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAicHgtNCBmbGV4IGl0ZW1zLWNlbnRlciBtdC00IG1kOm10LTAiIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJmb250LWF3ZXNvbWUtaWNvbiIsIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInRleHQtcHJpbWFyeSIsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWNvbjogInBob25lLXNxdWFyZS1hbHQiIH0KICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogInRleHQtc20gbWwtNCBtZDp0ZXh0LWxnIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgKDAyMSkgNzI3MDAzNiBleHQgMjM2ICIpCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJweC00IGZsZXggaXRlbXMtY2VudGVyIiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiZm9udC1hd2Vzb21lLWljb24iLCB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ0ZXh0LXByaW1hcnkiLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGljb246ICJlbnZlbG9wZSIgfQogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAidGV4dC1zbSBtbC00IG1kOnRleHQtbGciIH0sIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiB1cDJtQHBuai5hYy5pZCAiKQogICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdCiAgICAgICAgKQogICAgICBdKQogICAgXSkKICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygKICAgICAgImRpdiIsCiAgICAgIHsKICAgICAgICBzdGF0aWNDbGFzczoKICAgICAgICAgICJtZDpmbGV4IG1kOml0ZW1zLWNlbnRlciBtZDpqdXN0aWZ5LWNlbnRlciBncmlkIGdyaWQtY29scy0yIGdhcC0yIGNvbnRhaW5lciBteC1hdXRvIgogICAgICB9LAogICAgICBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICJ0ZXh0LXByaW1hcnkgZm9udC1zZW1pYm9sZCB0cmFuc2Zvcm0gZHVyYXRpb24tNTAwIHRyYW5zaXRpb24gaG92ZXI6c2NhbGUtMTEwIHRleHQtc20gdXBwZXJjYXNlIG1kOnB4LTQgbWQ6cHktNCB0ZXh0LWxlZnQgcHgtNCBweS0yIGJsb2NrIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogImh0dHBzOi8vZWxlYXJuaW5nLnBuai5hYy5pZC8iIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCJFLWxlYXJuaW5nIildCiAgICAgICAgKSwKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgInRleHQtcHJpbWFyeSBmb250LXNlbWlib2xkIHRyYW5zZm9ybSBkdXJhdGlvbi01MDAgdHJhbnNpdGlvbiBob3ZlcjpzY2FsZS0xMTAgdGV4dC1zbSB1cHBlcmNhc2UgbWQ6cHgtNCBtZDpweS00IHRleHQtbGVmdCBweC00IHB5LTIgYmxvY2siLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiaHR0cHM6Ly9zaW1rZXUucG5qLmFjLmlkL3BvcnRhbC91c2VyL2xvZ2luIiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiU2lta2V1IildCiAgICAgICAgKSwKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgInRleHQtcHJpbWFyeSBmb250LXNlbWlib2xkIHRyYW5zZm9ybSBkdXJhdGlvbi01MDAgdHJhbnNpdGlvbiBob3ZlcjpzY2FsZS0xMTAgdGV4dC1zbSB1cHBlcmNhc2UgbWQ6cHgtNCBtZDpweS00IHRleHQtbGVmdCBweC00IHB5LTIgYmxvY2siLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiaHR0cHM6Ly9zaW1wZWcucG5qLmFjLmlkL3BvcnRhbHNkbS8iIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCJTaW1wZWciKV0KICAgICAgICApLAogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczoKICAgICAgICAgICAgICAidGV4dC1wcmltYXJ5IGZvbnQtc2VtaWJvbGQgdHJhbnNmb3JtIGR1cmF0aW9uLTUwMCB0cmFuc2l0aW9uIGhvdmVyOnNjYWxlLTExMCB0ZXh0LXNtIHVwcGVyY2FzZSBtZDpweC00IG1kOnB5LTQgdGV4dC1sZWZ0IHB4LTQgcHktMiBibG9jayIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICJodHRwOi8vc2lzdGVyLnBuai5hYy5pZC9hdXRoL2xvZ2luIiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiU2lzdGVyIildCiAgICAgICAgKSwKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgInRleHQtcHJpbWFyeSBmb250LXNlbWlib2xkIHRyYW5zZm9ybSBkdXJhdGlvbi01MDAgdHJhbnNpdGlvbiBob3ZlcjpzY2FsZS0xMTAgdGV4dC1zbSB1cHBlcmNhc2UgbWQ6cHgtNCBtZDpweS00IHRleHQtbGVmdCBweC00IHB5LTIgYmxvY2siLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiaHR0cHM6Ly9zaWFrLnBuai5hYy5pZC9pbmRleC5waHA/cj1zaXRlL2xvZ2luIiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiU2lhayIpXQogICAgICAgICksCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICJ0ZXh0LXByaW1hcnkgZm9udC1zZW1pYm9sZCB0cmFuc2Zvcm0gZHVyYXRpb24tNTAwIHRyYW5zaXRpb24gaG92ZXI6c2NhbGUtMTEwIHRleHQtc20gdXBwZXJjYXNlIG1kOnB4LTQgbWQ6cHktNCB0ZXh0LWxlZnQgcHgtNCBweS0yIGJsb2NrIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogImh0dHA6Ly9qdXJuYWwucG5qLmFjLmlkLyIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIkp1cm5hbCIpXQogICAgICAgICksCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICJ0ZXh0LXByaW1hcnkgZm9udC1zZW1pYm9sZCB0cmFuc2Zvcm0gZHVyYXRpb24tNTAwIHRyYW5zaXRpb24gaG92ZXI6c2NhbGUtMTEwIHRleHQtc20gdXBwZXJjYXNlIG1kOnB4LTQgbWQ6cHktNCB0ZXh0LWxlZnQgcHgtNCBweS0yIGJsb2NrIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogImh0dHA6Ly9vcGFjLnBlcnB1c3Rha2Fhbi5wbmouYWMuaWQvIiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiT3BhYyIpXQogICAgICAgICksCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICJ0ZXh0LXByaW1hcnkgZm9udC1zZW1pYm9sZCB0cmFuc2Zvcm0gZHVyYXRpb24tNTAwIHRyYW5zaXRpb24gaG92ZXI6c2NhbGUtMTEwIHRleHQtc20gdXBwZXJjYXNlIG1kOnB4LTQgbWQ6cHktNCB0ZXh0LWxlZnQgcHgtNCBweS0yIGJsb2NrIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogImh0dHBzOi8vc2ltbGl0YWJtYXMucmlzdGVrYnJpbi5nby5pZC8iIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCJTaW1saXRhYm1hcyIpXQogICAgICAgICkKICAgICAgXQogICAgKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIi8iIH0gfSwgWwogICAgICBfYygiaW1nIiwgewogICAgICAgIHN0YXRpY0NsYXNzOiAib2JqZWN0LWNvdmVyIHctMzIgbWwtNCBtZDptdC00IiwKICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL2ltZy9sb2dvLnBuZyIpLCBhbHQ6ICJMb2dvIFVQMk0iIH0KICAgICAgfSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}